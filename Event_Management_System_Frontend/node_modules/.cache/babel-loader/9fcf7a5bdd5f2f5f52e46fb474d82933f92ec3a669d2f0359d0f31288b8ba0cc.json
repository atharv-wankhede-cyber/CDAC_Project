{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prajwal\\\\Downloads\\\\event-management-razorpay-frontend-master\\\\src\\\\UserComponent\\\\ForgotPassword.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [step, setStep] = useState(1);\n  const sendOtp = () => {\n    fetch(\"http://localhost:8080/api/user/forgot-password\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      toast.success(data.message);\n      setStep(2);\n    }).catch(() => toast.error(\"Failed to send OTP\"));\n  };\n  const resetPassword = () => {\n    fetch(\"http://localhost:8080/api/user/reset-password\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        emailId: email,\n        otp,\n        newPassword\n      })\n    }).then(res => res.json()).then(data => {\n      toast.success(data.message);\n      setStep(1);\n    }).catch(() => toast.error(\"Invalid OTP or error occurred\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter OTP & Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"7Wq8550rZwAS3ySq4bXP/rrq/wE=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["useState","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","otp","setOtp","newPassword","setNewPassword","step","setStep","sendOtp","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","message","catch","error","resetPassword","emailId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prajwal/Downloads/event-management-razorpay-frontend-master/src/UserComponent/ForgotPassword.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [step, setStep] = useState(1);\r\n\r\n    const sendOtp = () => {\r\n        fetch(\"http://localhost:8080/api/user/forgot-password\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ email }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                toast.success(data.message);\r\n                setStep(2);\r\n            })\r\n            .catch(() => toast.error(\"Failed to send OTP\"));\r\n    };\r\n\r\n    const resetPassword = () => {\r\n        fetch(\"http://localhost:8080/api/user/reset-password\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ emailId: email, otp, newPassword }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                toast.success(data.message);\r\n                setStep(1);\r\n            })\r\n            .catch(() => toast.error(\"Invalid OTP or error occurred\"));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {step === 1 ? (\r\n                <>\r\n                    <h4>Forgot Password</h4>\r\n                    <input type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <button onClick={sendOtp}>Send OTP</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>Enter OTP & Reset Password</h4>\r\n                    <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\r\n                    <input type=\"password\" placeholder=\"New Password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n                    <button onClick={resetPassword}>Reset Password</button>\r\n                </>\r\n            )}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}